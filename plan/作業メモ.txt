<やること>
・データの受け渡しができているかのテスト
・得点表示が更新できるか

◯フロント
・htmlとcssをそれぞれ別ファイルで書き換えて、かつそれぞれのhtmlに一対一対応でcssを作る。
・上記のあと、html内のPython、Djangoで書き換えられそうな処理を書き換える。
・決定ボタンを作る。
・デザインを綺麗にする。
・UI（User　Interface）を良くする
→視覚的な情報（デザイン・フォント・色・画像・アイコン）、操作性の要素（ボタンの配置・操作方法・導線・機能的な要素）
・画面遷移を行わずデータのやり取りを行う
→非同期通信

<やったこと>
・牌データの送信ボタンの作成
・ScoreResultからデータ取得をする関数の作成

◯バックエンド
・点数計算モジュールが手牌オブジェクトと条件オブジェクトを取得するビューを書く。
・点数計算モジュールが点数結果オブジェクトを点数表示モジュールに渡すビューを書く。
・非同期通信に対応出来るように、各ビューを書き直す。
・点数計算結果を8000,16000のように子、親の点数申告をするか、32000のように合計点数のみをモジュールに渡すか
・手牌 or 条件オブジェクトに親か子かを選ぶフィールドを作る。

＜不明点＞
・html, css, js, Djangoの具体的な連携方法
・非同期通信の方法
・Django、JavaSciript、Vue.jsそれぞれの役割と使い方。（りん）
・APIとして構成する方法。（kindle）(りん)
・

<gitlabコマンド>
・git add .
追加するファイルやディレクトリを決定(上記のコマンドだと全て)

・git commit -a　-m ""
追加するファイルやディレクトリを確定させる。(コメントは必須)

・git push
commitして確定させてファイルやディレクトリをGitLabサーバに送り込む

・git clone ...
手元に作業コピーを作る

・git pull 
他のメンバーがpushした変更を取り込む

・C:\Users\n1013\MSC_project\venv\Scripts\Activate.ps1
仮想環境アクティベート
 
 ＜班wiki　参考＞
・２４年　０５
・２３年　１１
・